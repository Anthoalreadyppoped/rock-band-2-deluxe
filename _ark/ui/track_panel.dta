#define TRACK_END_FRAME
(1920)

#define TRACK_PANEL_HANDLERS
((enter
   DX_TRACK_TEXTURE_HANDLER
      {game add_sink $this}

      #ifndef HX_EE ; why does this not work on ps2
      {unless {gamemode get is_h2h_arrangement}
         {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
            {switch {$player instrument}
               (bass {$player add_sink fc_bass_callback (hit miss pass check_fc check_missed do_customhw do_customhw_warn_off do_customhw_warn_on do_customhw_streak do_warning do_rail_warning do_streak do_groove num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
               (guitar {$player add_sink fc_guitar_callback (hit miss pass check_fc check_missed do_customhw do_customhw_warn_off do_customhw_warn_on do_customhw_streak do_warning do_rail_warning do_streak do_groove num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
               (drum {$player add_sink fc_drum_callback (hit miss pass check_fc check_missed do_customhw do_customhw_warn_off do_customhw_warn_on do_customhw_streak do_warning do_rail_warning do_streak do_groove num_gems_hit num_gems_combo num_gems_miss num_gems_pass)})
            }
         }
      }
      #endif

      {{{gamemode get track_panel} loaded_dir} set view_time_easy {* {/ 2.4 $trackspeed} $speedmod}} ;implement track speed modifier
      {{{gamemode get track_panel} loaded_dir} set view_time_expert {* {/ 1.2 $trackspeed} $speedmod}}

      {$this
         set_showing
         {if_else
            {'||'
               $skip_intro
               {gamemode get is_drum_trainer}
               {gamemode get is_practice}}
            {gamemode get show_track}
            FALSE}})
   (exit
      {game remove_sink $this})
   (unison_hit)
   (unison_miss)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this set_showing FALSE}
      {$this set_track_out})
   (intro_start
      {$this reset}
      {$this
         set_showing
         {gamemode get show_track}}
      {$this set_track_in})
   (intro_skip
       {$this reset}
      {$this
         set_showing
         {gamemode get show_track}}
      {$this set_track_out}
      {$this play_intro}
   )
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}
         {{$m track}
            init
            {$m track}}}
      {{$this loaded_dir}
         reset})
   (on_extend
   {$this play_intro}
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {synth play track_beg.cue}
		 {unless {> {gamecfg get practice_speed} 0} {beatmatch set_music_speed $speedmod}}
		 {if {> {gamecfg get practice_speed} 0} {beatmatch set_music_speed $modifier}}}))
{new
   TrackPanel
   coop_track_panel
   (file
   ../track/trackpanel.milo
   )
   TRACK_PANEL_HANDLERS}
{new
   TrackPanel
   h2h_track_panel
   (file
      {if_else
         {==
            {{game get_participant_config 0}
               get_track_sym}
            vocals}
         ../track/trackpanel_h2h_vocals.milo
   ../track/trackpanel_h2h.milo
   })
   TRACK_PANEL_HANDLERS}
{new
   TrackPanel
   hth_track_panel
   (file
      {if_else
         {==
            {{game get_participant_config 0}
               get_track_sym}
            vocals}
         ../track/trackpanel_hth_vocals.milo
         ../track/trackpanel_hth.milo})
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}
