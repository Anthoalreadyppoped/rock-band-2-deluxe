{new
    UIPanel
    overshell_main_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_mod os_sys os_spd os_trkset os_cam)}
        {title.lbl set_localized {localize os_dxsettings}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_sys
            {ui push_screen overshell_system_screen}
         )
         (os_spd
            {ui push_screen options_milo_screen}
         )
         (os_mod
            {set $mod_os_entered TRUE}
            {ui push_screen modifiers_screen}
         )
         (os_trkset
            {ui push_screen overshell_track_screen}
         )
         (os_cam
            {ui push_screen overshell_cam_screen}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
            {== $action kAction_Cancel}
            {synth play button_toggle}
            {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen splash_screen}
         }
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_main_screen
   (panels overshell_main_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_main_panel)}
;
{new
    UIPanel
    overshell_system_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_console #ifndef HX_PS3 os_gameplay #endif os_data)}
        {title.lbl set_localized {localize os_sys}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_gameplay
            {set $mod_os_entered TRUE}
            {warn_no_signin_push_screen options_gameplay_screen $player_num}
         )
         (os_console
            {set $mod_os_entered TRUE}
            {ui push_screen options_console_screen}
         )
         (os_vocal
            {set $mod_os_entered TRUE}
            {warn_no_signin_push_screen vocal_options_screen}
         )
         (os_data
            {set $mod_os_entered TRUE}
            {if_else
               {&&
                  {platform_mgr is_player_signed_in $player_num}
                  {!
                     {platform_mgr is_player_a_guest $player_num}}}
               {do
                  {ui push_screen options_savedata_screen $player_num}
                  {input_mgr
                     set_user
                     {user_mgr get_band_user $player_num}}}
               {do
                  {options_screen register_user_confirm $player}
                  {ui push_screen options_savedata_signin_screen}
                  {input_mgr
                     set_user
                     {user_mgr get_band_user $player_num}}}}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_main_screen}
         {set $mod_os_entered FALSE}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_system_screen
   (panels overshell_system_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_system_panel)}
;
{new
    UIPanel
    overshell_track_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_trkpreset os_angle os_clr)}
        {title.lbl set_localized {localize os_trkset}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_trkpreset
            {ui push_screen overshell_trkpreset_screen}
         )
         (os_angle
            {ui push_screen overshell_angle_screen}
         )
         (os_clr
            {ui push_screen options_color_screen}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_track_screen
   (panels overshell_track_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_track_panel)}
;
{new
    UIPanel
    overshell_cam_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_cycam os_gtrfx)}
        {title.lbl set_localized {localize os_cam}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_cycam
            {cycle_free_camera}
         )
         (os_gtrfx
            {cycle_guitar_fx}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_main_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_cam_screen
   (panels overshell_cam_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_cam_panel)}
;
{new
    UIPanel
    overshell_trkpreset_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
         {if_else $texrunonce
            {sel_section.lst set_data (os_tex os_rb2dxprst os_rb2prst os_rb1prst os_rb3prst os_rb4prst os_lrbprst os_tbrbprst)}
            {sel_section.lst set_data (os_tex os_rb2dxprst os_rb2prst_reset os_rb1prst os_rb3prst os_rb4prst os_lrbprst os_tbrbprst)}}
        {title.lbl set_localized {localize os_trkpreset}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_tex
            {ui push_screen overshell_tex_screen}
         )
         (os_rb2prst_reset
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr deactivate_modifier mod_gemdivider}
            {set $trackangle FALSE}
            {set $voxhwcustomtexture FALSE}
            {set $voxhw FALSE}
            {set $gemcustomtexture FALSE}
            {set $gem FALSE}
            {set $smashercustomtexture FALSE}
            {set $smasher FALSE}
            {set $voxarrowcustomtexture FALSE}
            {set $voxarrow FALSE}
            {set $voxnotescustomtexture FALSE}
            {set $voxnotes FALSE}
            {set $voxodcustomtexture FALSE}
            {set $voxod FALSE}
            {set $scorecustomtexture FALSE}
            {set $scoretex FALSE}
            {set $odbarcustomtexture FALSE}
            {set $odbar FALSE}
            {set $railscustomtexture FALSE}
            {set $rails FALSE}
            {set $flamescustomtexture FALSE}
            {set $flames FALSE}
            {set $multiringcustomtexture FALSE}
            {set $multiring FALSE}
            {set $streakcustomtexture FALSE}
            {set $streak FALSE}
            {set $highwaycustomtexture FALSE}
            {set $highway FALSE}
            {set $spotlightgtrcustomtexture FALSE}
            {set $spotlightgtr FALSE}
            {set $spotlightbasscustomtexture FALSE}
            {set $spotlightbass FALSE}
            {set $spotlightdrumcustomtexture FALSE}
            {set $spotlightdrum FALSE}
         )
         (os_rb2dxprst
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr deactivate_modifier mod_gemdivider}
            {set $trackangle FALSE}
            {if_else $texrunonce
               {do
                  {set $voxhwcustomtexture TRUE}
                  {set $voxhw rb2}}
               {do
                  {set $voxhwcustomtexture FALSE}
                  {set $voxhw FALSE}}}
            {set $gemcustomtexture TRUE}
            {set $gem rb2dx}
            {set $smashercustomtexture TRUE}
            {set $smasher rb2dx}
            {set $voxarrowcustomtexture TRUE}
            {set $voxarrow rb2dx}
            {set $voxnotescustomtexture TRUE}
            {set $voxnotes rb2dx}
            {if_else $texrunonce
               {do
                  {set $voxodcustomtexture TRUE}
                  {set $voxod rb2}}
               {do
                  {set $voxodcustomtexture FALSE}
                  {set $voxod FALSE}}}
            {set $scorecustomtexture TRUE}
            {set $scoretex rb4}
            {set $odbarcustomtexture TRUE}
            {set $odbar rb2dx}
            {if_else $texrunonce
               {do
                  {set $railscustomtexture TRUE}
                  {set $rails rb2}}
               {do
                  {set $railscustomtexture FALSE}
                  {set $rails FALSE}}}
            {set $flamescustomtexture TRUE}
            {set $flames rb2dx}
            {set $multiringcustomtexture TRUE}
            {set $multiring rb2dx}
            {set $streakcustomtexture TRUE}
            {set $streak rb4}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr rb4}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass rb4}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum rb4}
         )
         (os_rb1prst
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr deactivate_modifier mod_gemdivider}
            {set $trackangle FALSE}
            {set $voxhwcustomtexture TRUE}
            {set $voxhw rb1}
            {if_else $texrunonce
               {do
                  {set $gemcustomtexture TRUE}
                  {set $gem rb2}}
               {do
                  {set $gemcustomtexture FALSE}
                  {set $gem FALSE}}}
            {set $smashercustomtexture TRUE}
            {set $smasher rb1}
            {set $voxarrowcustomtexture TRUE}
            {set $voxarrow rb1}
            {if_else $texrunonce
               {do
                  {set $voxnotescustomtexture TRUE}
                  {set $voxnotes rb2}}
               {do
                  {set $voxnotescustomtexture FALSE}
                  {set $voxnotes FALSE}}}
            {set $voxodcustomtexture TRUE}
            {set $voxod rb1}
            {set $scorecustomtexture TRUE}
            {set $scoretex rb1}
            {if_else $texrunonce
               {do
                  {set $odbarcustomtexture TRUE}
                  {set $odbar rb2}}
               {do
                  {set $odbarcustomtexture FALSE}
                  {set $odbar FALSE}}}
            {if_else $texrunonce
               {do
                  {set $railscustomtexture TRUE}
                  {set $rails rb2}}
               {do
                  {set $railscustomtexture FALSE}
                  {set $rails FALSE}}}
            {if_else $texrunonce
               {do
                  {set $flamescustomtexture TRUE}
                  {set $flames rb2}}
               {do
                  {set $flamescustomtexture FALSE}
                  {set $flames FALSE}}}
            {set $multiringcustomtexture TRUE}
            {set $multiring rb1}
            {if_else $texrunonce
               {do
                  {set $streakcustomtexture TRUE}
                  {set $streak rb2}}
               {do
                  {set $streakcustomtexture FALSE}
                  {set $streak FALSE}}}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr rb1_guitar}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass rb1_bass}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum rb1_drums}
         )
         (os_rb2prst
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr deactivate_modifier mod_gemdivider}
            {set $trackangle FALSE}
            {set $voxhwcustomtexture TRUE}
            {set $voxhw rb2}
            {set $gemcustomtexture TRUE}
            {set $gem rb2}
            {set $smashercustomtexture TRUE}
            {set $smasher rb2}
            {set $voxarrowcustomtexture TRUE}
            {set $voxarrow rb2}
            {set $voxnotescustomtexture TRUE}
            {set $voxnotes rb2}
            {set $voxodcustomtexture TRUE}
            {set $voxod rb2}
            {set $scorecustomtexture TRUE}
            {set $scoretex rb2}
            {set $odbarcustomtexture TRUE}
            {set $odbar rb2}
            {set $railscustomtexture TRUE}
            {set $rails rb2}
            {set $flamescustomtexture TRUE}
            {set $flames rb2}
            {set $multiringcustomtexture TRUE}
            {set $multiring rb2}
            {set $railscustomtexture TRUE}
            {set $rails rb2}
            {set $streakcustomtexture TRUE}
            {set $streak rb2}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr rb2_guitar}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass rb2_bass}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum rb2_drums}
         )
         (os_rb3prst
            {modifier_mgr activate_modifier mod_rb3sustain}
            {modifier_mgr activate_modifier mod_gemdivider}
            {set $trackangle TRUE}
            {set $voxhwcustomtexture TRUE}
            {set $voxhw rb3}
            {set $gemcustomtexture TRUE}
            {set $gem rb3}
            {set $smashercustomtexture TRUE}
            {set $smasher rb3}
            {set $voxarrowcustomtexture TRUE}
            {set $voxarrow rb2dx}
            {set $voxnotescustomtexture TRUE}
            {set $voxnotes rb2dx}
            {set $voxodcustomtexture TRUE}
            {set $voxod rb3}
            {set $scorecustomtexture TRUE}
            {set $scoretex rb3}
            {set $odbarcustomtexture TRUE}
            {set $odbar rb3}
            {set $railscustomtexture TRUE}
            {set $rails rb3}
            {set $flamescustomtexture TRUE}
            {set $flames rb3}
            {set $multiringcustomtexture TRUE}
            {set $multiring rb3}
            {set $streakcustomtexture TRUE}
            {set $streak rb3_guitar}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr rb3_guitar}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass rb3_bass}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum rb3_drums}
            {set $track_pitch -40.5}
            {set $track_fov 19}
            {set $track_y_pos -100}
            {set $track_z_pos 22}
            {set $track_fade_start 70}
            {set $track_fade_length 50}
            {set $multioptimized TRUE}
            {set $track_pitch_2p -40.5}
            {set $track_fov_2p 19}
            {set $track_y_pos_2p -115}
            {set $track_z_pos_2p 25.8}
            {set $track_fade_start_2p 90}
            {set $track_fade_length_2p 50}
            {set $track_cam_offset 0.439}
            {set $track_pitch_3p -40.25}
            {set $track_fov_3p 19}
            {set $track_y_pos_3p -135}
            {set $track_z_pos_3p 31}
            {set $track_fade_start_3p 115}
            {set $track_fade_length_3p 50}
            {set $track_x_offset 24}
            {set $track_side_angle 7.5}
         )
         (os_rb4prst
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr activate_modifier mod_gemdivider}
            {set $trackangle TRUE}
            {set $voxhwcustomtexture TRUE}
            {set $voxhw rb3}
            {set $gemcustomtexture TRUE}
            {set $gem rb4}
            {set $smashercustomtexture TRUE}
            {set $smasher rb4}
            {set $voxarrowcustomtexture TRUE}
            {set $voxarrow rb2dx}
            {set $voxnotescustomtexture TRUE}
            {set $voxnotes rb2dx}
            {if_else $texrunonce
               {do
                  {set $voxodcustomtexture TRUE}
                  {set $voxod rb2}}
               {do
                  {set $voxodcustomtexture FALSE}
                  {set $voxod FALSE}}}
            {set $scorecustomtexture TRUE}
            {set $scoretex rb4}
            {set $odbarcustomtexture TRUE}
            {set $odbar rb4}
            {set $railscustomtexture TRUE}
            {set $rails rb4}
            {set $flamescustomtexture TRUE}
            {set $flames rb4}
            {set $multiringcustomtexture TRUE}
            {set $multiring rb4}
            {set $streakcustomtexture TRUE}
            {set $streak rb4}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr rb4}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass rb4}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum rb4}
            {set $track_pitch -40.15}
            {set $track_fov 21}
            {set $track_y_pos -112}
            {set $track_z_pos 26.25}
            {set $track_fade_start 130}
            {set $track_fade_length 15}
            {set $multioptimized TRUE}
            {set $track_pitch_2p -40.15}
            {set $track_fov_2p 21}
            {set $track_y_pos_2p -112}
            {set $track_z_pos_2p 26.25}
            {set $track_fade_start_2p 136}
            {set $track_fade_length_2p 15}
            {set $track_cam_offset 0.5}
            {set $track_pitch_3p -40.15}
            {set $track_fov_3p 21}
            {set $track_y_pos_3p -128}
            {set $track_z_pos_3p 30.25}
            {set $track_fade_start_3p 136}
            {set $track_fade_length_3p 15}
            {set $track_x_offset 27.75}
            {set $track_side_angle 9.5}
         )
         (os_lrbprst
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr deactivate_modifier mod_gemdivider}
            {set $trackangle FALSE}
            {if_else $texrunonce
               {do
                  {set $voxhwcustomtexture TRUE}
                  {set $voxhw rb2}}
               {do
                  {set $voxhwcustomtexture FALSE}
                  {set $voxhw FALSE}}}
            {if_else $texrunonce
               {do
                  {set $gemcustomtexture TRUE}
                  {set $gem rb2}}
               {do
                  {set $gemcustomtexture FALSE}
                  {set $gem FALSE}}}
            {if_else $texrunonce
               {do
                  {set $smashercustomtexture TRUE}
                  {set $smasher rb2}}
               {do
                  {set $smashercustomtexture FALSE}
                  {set $smasher FALSE}}}
            {if_else $texrunonce
               {do
                  {set $voxarrowcustomtexture TRUE}
                  {set $voxarrow rb2}}
               {do
                  {set $voxarrowcustomtexture FALSE}
                  {set $voxarrow FALSE}}}
            {if_else $texrunonce
               {do
                  {set $voxnotescustomtexture TRUE}
                  {set $voxnotes rb2}}
               {do
                  {set $voxnotescustomtexture FALSE}
                  {set $voxnotes FALSE}}}
            {set $voxodcustomtexture TRUE}
            {set $voxod lrb}
            {if_else $texrunonce
               {do
                  {set $scorecustomtexture TRUE}
                  {set $scoretex rb2}}
               {do
                  {set $scorecustomtexture FALSE}
                  {set $scoretex FALSE}}}
            {set $odbarcustomtexture TRUE}
            {set $odbar lrb}
            {if_else $texrunonce
               {do
                  {set $railscustomtexture TRUE}
                  {set $rails rb2}}
               {do
                  {set $railscustomtexture FALSE}
                  {set $rails FALSE}}}
            {if_else $texrunonce
               {do
                  {set $flamescustomtexture TRUE}
                  {set $flames rb2}}
               {do
                  {set $flamescustomtexture FALSE}
                  {set $flames FALSE}}}
            {set $multiringcustomtexture TRUE}
            {set $multiring lrb}
            {set $streakcustomtexture TRUE}
            {set $streak lrb}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr lrb_guitar}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass lrb_bass}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum lrb_drums}
         )
         (os_tbrbprst
            {modifier_mgr deactivate_modifier mod_rb3sustain}
            {modifier_mgr deactivate_modifier mod_gemdivider}
            {set $trackangle TRUE}
            {set $voxhwcustomtexture TRUE}
            {set $voxhw rb3}
            {set $gemcustomtexture TRUE}
            {set $gem tbrb}
            {set $smashercustomtexture TRUE}
            {set $smasher rb2dx}
            {if_else $texrunonce
               {do
                  {set $voxarrowcustomtexture TRUE}
                  {set $voxarrow rb2}}
               {do
                  {set $voxarrowcustomtexture FALSE}
                  {set $voxarrow FALSE}}}
            {set $voxnotescustomtexture TRUE}
            {set $voxnotes rb2dx}
            {set $voxodcustomtexture TRUE}
            {set $voxod lrb}
            {set $scorecustomtexture TRUE}
            {set $scoretex rb4}
            {set $odbarcustomtexture TRUE}
            {set $odbar tbrb}
            {set $railscustomtexture TRUE}
            {set $rails rb4}
            {set $flamescustomtexture TRUE}
            {set $flames rb2dx}
            {set $multiringcustomtexture TRUE}
            {set $multiring tbrb}
            {set $streakcustomtexture TRUE}
            {set $streak tbrb}
            {set $spotlightgtrcustomtexture TRUE}
            {set $spotlightgtr tbrb_guitar}
            {set $spotlightbasscustomtexture TRUE}
            {set $spotlightbass tbrb_bass}
            {set $spotlightdrumcustomtexture TRUE}
            {set $spotlightdrum tbrb_drums}
            {set $track_pitch -40.5}
            {set $track_fov 19}
            {set $track_y_pos -100}
            {set $track_z_pos 22}
            {set $track_fade_start 70}
            {set $track_fade_length 50}
            {set $multioptimized TRUE}
            {set $track_pitch_2p -40.5}
            {set $track_fov_2p 19}
            {set $track_y_pos_2p -115}
            {set $track_z_pos_2p 25.8}
            {set $track_fade_start_2p 90}
            {set $track_fade_length_2p 50}
            {set $track_cam_offset 0.439}
            {set $track_pitch_3p -40.25}
            {set $track_fov_3p 19}
            {set $track_y_pos_3p -135}
            {set $track_z_pos_3p 31}
            {set $track_fade_start_3p 115}
            {set $track_fade_length_3p 50}
            {set $track_x_offset 24}
            {set $track_side_angle 7.5}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_track_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_trkpreset_screen
   (panels overshell_trkpreset_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_trkpreset_panel)}
;
{new
    UIPanel
    overshell_tex_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_gems os_smashers os_flames os_score os_bre os_rails os_odbar os_multi_ring os_hw os_strk os_spotlight os_voxtrk)}
        {title.lbl set_localized {localize os_tex1}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_gems
            {set $dx_tracked_texture_loader gems}
            {ui push_screen overshell_texload_screen}
         )
         (os_smashers
            {set $dx_tracked_texture_loader smashers}
            {ui push_screen overshell_texload_screen}
         )
		   (os_score
            {set $dx_tracked_texture_loader score}
            {ui push_screen overshell_texload_screen}
         )
         (os_bre
            {set $dx_tracked_texture_loader bre}
            {ui push_screen overshell_texload_screen}
         )
         (os_flames
            {set $dx_tracked_texture_loader flames}
            {ui push_screen overshell_texload_screen}
         )
         (os_rails
            {set $dx_tracked_texture_loader rails}
            {ui push_screen overshell_texload_screen}
         )
         (os_hw
            {set $dx_tracked_texture_loader highway}
            {ui push_screen overshell_texload_screen}
         )
         (os_strk
            {set $dx_tracked_texture_loader streak}
            {ui push_screen overshell_texload_screen}
         )
         (os_spotlight
            {ui push_screen overshell_spotlight_sel_screen}
         )
         (os_odbar
            {set $dx_tracked_texture_loader odbar}
            {ui push_screen overshell_texload_screen}
         )
         (os_multi_ring
            {set $dx_tracked_texture_loader multiring}
            {ui push_screen overshell_texload_screen}
         )
	     (os_voxtrk
            {ui push_screen overshell_voxtrk_screen}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_trkpreset_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_tex_screen
   (panels overshell_tex_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_tex_panel)}
;
{new
    UIPanel
    overshell_spotlight_sel_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_spotlightall os_spotlightgtr os_spotlightbass os_spotlightdrum)}
        {title.lbl set_localized {localize os_spotlightheader}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
    {switch {$component selected_sym}
         (os_spotlightall
            {set $dx_tracked_texture_loader spotlight}
            {set $dx_spotlight_tracked_instrument all}
            {ui push_screen overshell_texload_screen}
         )
         (os_spotlightgtr
            {set $dx_spotlight_tracked_instrument guitar}
            {set $dx_tracked_texture_loader spotlight}
            {ui push_screen overshell_texload_screen}
         )
		   (os_spotlightbass
            {set $dx_spotlight_tracked_instrument bass}
            {set $dx_tracked_texture_loader spotlight}
            {ui push_screen overshell_texload_screen}
         )
         (os_spotlightdrum
            {set $dx_spotlight_tracked_instrument drum}
            {set $dx_tracked_texture_loader spotlight}
            {ui push_screen overshell_texload_screen}
         )
      })
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_trkpreset_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_spotlight_sel_screen
   (panels overshell_spotlight_sel_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_spotlight_sel_panel)}
;
{new
    UIPanel
    overshell_voxtrk_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data (os_voxarrow os_voxhw os_voxnotes os_voxod)}
        {title.lbl set_localized {localize os_voxtrk1}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
      {switch {$component selected_sym}
   		(os_voxarrow
            {set $dx_tracked_texture_loader voxarrow}
            {ui push_screen overshell_texload_screen}
         )
         (os_voxhw
            {set $dx_tracked_texture_loader voxhw}
            {ui push_screen overshell_texload_screen}
         )
   		(os_voxnotes
            {set $dx_tracked_texture_loader voxnotes}
            {ui push_screen overshell_texload_screen}
         )
   		(os_voxod
            {set $dx_tracked_texture_loader voxod}
            {ui push_screen overshell_texload_screen}
         )
      }
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_tex_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_voxtrk_screen
   (panels overshell_voxtrk_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_voxtrk_panel)}
;
{new
    UIPanel
    overshell_texload_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
      {full_selection.mesh set_showing FALSE}
      {switch $dx_tracked_texture_loader
         (gems
            {sel_section.lst set_data (#include ../track/gems/gems.dta)}
            {title.lbl set_localized {localize os_gems}}
            {anchor_corner02.tex set_bitmap {sprint "track/gems/prism_gems_" $gem ".png"}}
         )
         (smashers
            {sel_section.lst set_data (#include ../track_new/smashers/smashers.dta)}
            {title.lbl set_localized {localize os_smashers}}
            {anchor_corner02.tex set_bitmap {sprint "track_new/smashers/black_smasher_yellow_" $smasher ".png"}}
         )
         (score
            {sel_section.lst set_data (#include ../track/score/score.dta)}
            {title.lbl set_localized {localize os_score}}
            {anchor_corner02.tex set_bitmap {sprint "track/score/indv_player_meter_" $scoretex ".png"}}
         )
         (bre
            {sel_section.lst set_data (#include ../track_new/bre/bre.dta)}
            {title.lbl set_localized {localize os_bre}}
            {anchor_corner02.tex set_bitmap {sprint "track_new/bre/bre_shield_" $bretex ".png"}}
         )
         (flames
            {sel_section.lst set_data (#include ../track_new/flames/flames.dta)}
            {title.lbl set_localized {localize flames}}
            {anchor_corner02.tex set_bitmap {sprint "track_new/flames/sparks_" $flames ".png"}}
         )
         (rails
            {sel_section.lst set_data (#include ../track/rails/rails.dta)}
            {title.lbl set_localized {localize os_rails}}
            {anchor_corner02.tex set_bitmap {sprint "track/rails/rails_" $rails ".png"}}
         )
         (highway
            {sel_section.lst set_data (#include ../track_new/highways/highways.dta)}
            {title.lbl set_localized {localize os_hw}}
            {anchor_corner02.tex set_bitmap {sprint "track_new/highways/" $highway ".png"}}
         )
         (streak
            {sel_section.lst set_data (#include ../track_new/streak/streak.dta)}
            {title.lbl set_localized {localize os_strk}}
            {anchor_corner02.tex set_bitmap {sprint "track_new/streak/" $streak ".png"}}
         )
         (spotlight
            {sel_section.lst set_data (#include ../track_new/spotlight/spotlight.dta)}
            {switch $dx_spotlight_tracked_instrument
               (guitar
                  {anchor_corner02.tex set_bitmap {sprint "track_new/spotlight/" $spotlightgtr ".png"}}
                  {title.lbl set_localized {localize os_spotlightgtr}}
               )
               (bass
                  {anchor_corner02.tex set_bitmap {sprint "track_new/spotlight/" $spotlightbass ".png"}}
                  {title.lbl set_localized {localize os_spotlightbass}}
               )
               (drum
                  {anchor_corner02.tex set_bitmap {sprint "track_new/spotlight/" $spotlightdrum ".png"}}
                  {title.lbl set_localized {localize os_spotlightdrum}}
               )
               (all
                  {anchor_corner02.tex set_bitmap {sprint "track_new/spotlight/" $spotlightgtr ".png"}}
                  {title.lbl set_localized {localize os_spotlightall}}
               )
            }
         )
         (odbar
            {sel_section.lst set_data (#include ../track/overdrive_bar/overdrive_bar.dta)}
            {title.lbl set_localized {localize os_odbar}}
            {anchor_corner02.tex set_bitmap {sprint "track/overdrive_bar/player_meter_background_" $odbar ".png"}}
         )
         (multiring
            {sel_section.lst set_data (#include ../track/multiplier_ring/multiplier_ring.dta)}
            {title.lbl set_localized {localize os_multi_ring}}
            {anchor_corner02.tex set_bitmap {sprint "track/multiplier_ring/multiplier_cap_glass_vox_" $multiring ".png"}}
         )
         (voxarrow
            {sel_section.lst set_data (#include ../track/voxarrow/voxarrow.dta)}
            {title.lbl set_localized {localize os_voxarrow}}
            {anchor_corner02.tex set_bitmap {sprint "track/voxarrow/pitch_arrow_split_" $voxarrow ".png"}}
         )
         (voxhw
            {sel_section.lst set_data (#include ../track/voxhw/voxhw.dta)}
            {title.lbl set_localized {localize os_voxhw}}
            {anchor_corner02.tex set_bitmap {sprint "track/voxhw/vocal_bg_" $voxhw ".png"}}
         )
         (voxod
            {sel_section.lst set_data (#include ../track/voxod/voxod.dta)}
            {title.lbl set_localized {localize os_voxod}}
            {anchor_corner02.tex set_bitmap {sprint "track/voxod/vox_now_bar_effect_" $voxod ".png"}}
         )
         (voxnotes
            {sel_section.lst set_data (#include ../track/voxnotes/voxnotes.dta)}
            {title.lbl set_localized {localize os_voxnotes}}
            {anchor_corner02.tex set_bitmap {sprint "track/voxnotes/3d_tube_pitched_" $voxnotes ".png"}}
         )
      }
        {sit_gargoyle.mat set color {pack_color 1 1 1}}
        {sit_gargoyle.mat set diffuse_tex anchor_corner02.tex}
        {sit_gargoyle.mat set specular_map anchor_corner02.tex}
        {sit_gargoyle02.mesh set_local_pos_index 2 -140})
    (exit)
    (SELECT_MSG
      {switch $dx_tracked_texture_loader
         (gems
            {set $gemcustomtexture TRUE}
            {set $gem {$component selected_sym}}
         )
         (smashers
            {set $smashercustomtexture TRUE}
            {set $smasher {$component selected_sym}}
         )
         (score
            {set $scorecustomtexture TRUE}
            {set $scoretex {$component selected_sym}}
         )
         (bre
            {set $brecustomtexture TRUE}
            {set $bretex {$component selected_sym}}
         )
         (flames
            {set $flamescustomtexture TRUE}
            {set $flames {$component selected_sym}}
         )
         (rails
            {set $railscustomtexture TRUE}
            {set $rails {$component selected_sym}}
         )
         (highway
            {set $highwaycustomtexture TRUE}
            {set $highway {$component selected_sym}}
         )
         (streak
            {set $streakcustomtexture TRUE}
            {set $streak {$component selected_sym}}
         )
         (spotlight
            {switch $dx_spotlight_tracked_instrument
               (guitar
                  {set $spotlightgtrcustomtexture TRUE}
                  {set $spotlightgtr {$component selected_sym}}
               )
               (bass
                  {set $spotlightbasscustomtexture TRUE}
                  {set $spotlightbass {$component selected_sym}}
               )
               (drum
                  {set $spotlightdrumcustomtexture TRUE}
                  {set $spotlightdrum {$component selected_sym}}
               )
               (all
                  {set $spotlightgtrcustomtexture TRUE}
                  {set $spotlightbasscustomtexture TRUE}
                  {set $spotlightdrumcustomtexture TRUE}
                  {set $spotlightgtr {$component selected_sym}}
                  {set $spotlightbass {$component selected_sym}}
                  {set $spotlightdrum {$component selected_sym}}
               )
            }
         )
         (odbar
            {set $odbarcustomtexture TRUE}
          {set $odbar {$component selected_sym}}
         )
         (multiring
            {set $multiringcustomtexture TRUE}
            {set $multiring {$component selected_sym}}
         )
         (voxarrow
            {set $voxarrowcustomtexture TRUE}
            {set $voxarrow {$component selected_sym}}
         )
         (voxhw
            {set $voxhwcustomtexture TRUE}
            {set $voxhw {$component selected_sym}}
         )
         (voxod
            {set $voxodcustomtexture TRUE}
         {set $voxod {$component selected_sym}}
         )
         (voxnotes
            {set $voxnotescustomtexture TRUE}
            {set $voxnotes {$component selected_sym}}
         )
      }
      {ui goto_screen overshell_track_screen}
      {ui pop_screen}
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG
      {switch $dx_tracked_texture_loader
         (gems
            {anchor_corner02.tex set_bitmap {sprint "track/gems/prism_gems_" {$component selected_sym} ".png"}}
         )
         (smashers
            {anchor_corner02.tex set_bitmap {sprint "track_new/smashers/black_smasher_yellow_" {$component selected_sym} ".png"}}
         )
         (score
            {anchor_corner02.tex set_bitmap {sprint "track/score/indv_player_meter_" {$component selected_sym} ".png"}}
         )
         (bre
            {anchor_corner02.tex set_bitmap {sprint "track_new/bre/bre_shield_" {$component selected_sym} ".png"}}
         )
         (flames
            {anchor_corner02.tex set_bitmap {sprint "track_new/flames/sparks_" {$component selected_sym} ".png"}}
         )
         (rails
            {anchor_corner02.tex set_bitmap {sprint "track/rails/rails_" {$component selected_sym} ".png"}}
         )
         (highway
            {anchor_corner02.tex set_bitmap {sprint "track_new/highways/" {$component selected_sym} ".png"}}
         )
         (streak
            {anchor_corner02.tex set_bitmap {sprint "track_new/streak/" {$component selected_sym} ".png"}}
         )
         (spotlight
            {anchor_corner02.tex set_bitmap {sprint "track_new/spotlight/" {$component selected_sym} ".png"}}
         )
         (odbar
            {anchor_corner02.tex set_bitmap {sprint "track/overdrive_bar/player_meter_background_" {$component selected_sym} ".png"}}
         )
         (multiring
            {anchor_corner02.tex set_bitmap {sprint "track/multiplier_ring/multiplier_cap_glass_vox_" {$component selected_sym} ".png"}}
         )
         (voxarrow
            {anchor_corner02.tex set_bitmap {sprint "track/voxarrow/pitch_arrow_split_" {$component selected_sym} ".png"}}
         )
         (voxhw
            {anchor_corner02.tex set_bitmap {sprint "track/voxhw/vocal_bg_" {$component selected_sym} ".png"}}
         )
         (voxod
            {anchor_corner02.tex set_bitmap {sprint "track/voxod/vox_now_bar_effect_" {$component selected_sym} ".png"}}
         )
         (voxnotes
            {anchor_corner02.tex set_bitmap {sprint "track/voxnotes/3d_tube_pitched_" {$component selected_sym} ".png"}}
         )
      }
      )
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_track_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_texload_screen
   (panels overshell_texload_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_texload_panel)}
;
{new
    UIPanel
    overshell_angle_panel
    (file
        "practice/practice_sel_section.milo")
    (focus sel_section.lst)
    (enter
        {sel_section.lst set_data
            (rb2 rb3 rb4 rr)}
        {title.lbl set_localized {localize os_angle}}
        {full_selection.mesh set_showing FALSE})
    (exit)
    (SELECT_MSG
      {switch {$component selected_sym}
      ; (os_dta
      ;    {set $trackangle TRUE}
      ;    {set $angledta {read_file #ifdef HX_XBOX "GAME:/angle.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30147/USRDIR/angle.dta" #endif}}
      ;    {foreach $entry $angledta
      ;       {if {== {elem $entry 0} {basename track_pitch}}
      ;          {set $track_pitch
      ;             {elem {find $entry track_pitch} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_fov}}
      ;          {set $track_fov
      ;             {elem {find $entry track_fov} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_y_pos}}
      ;          {set $track_y_pos
      ;             {elem {find $entry track_y_pos} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_z_pos}}
      ;          {set $track_z_pos
      ;             {elem {find $entry track_z_pos} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_fade_start}}
      ;          {set $track_fade_start
      ;             {elem {find $entry track_fade_start} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_fade_length}}
      ;          {set $track_fade_length
      ;             {elem {find $entry track_fade_length} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_x_offset}}
      ;          {set $track_x_offset
      ;             {elem {find $entry track_x_offset} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_side_angle}}
      ;          {set $track_side_angle
      ;             {elem {find $entry track_side_angle} 1}
      ;          }
      ;       }
      ;       {if {== {elem $entry 0} {basename track_cam_offset}}
      ;          {set $track_cam_offset
      ;             {elem {find $entry track_cam_offset} 1}
      ;          }
      ;       }
      ;    }
      ; )
      (rb2
      {set $trackangle FALSE}
      )
      (rb3
      {set $trackangle TRUE}
      {set $track_pitch -40.5}
      {set $track_fov 19}
      {set $track_y_pos -100}
      {set $track_z_pos 22}
      {set $track_fade_start 70}
      {set $track_fade_length 50}
      {set $multioptimized TRUE}
      {set $track_pitch_2p -40.5}
      {set $track_fov_2p 19}
      {set $track_y_pos_2p -115}
      {set $track_z_pos_2p 25.8}
      {set $track_fade_start_2p 90}
      {set $track_fade_length_2p 50}
      {set $track_cam_offset 0.439}
      {set $track_pitch_3p -40.25}
      {set $track_fov_3p 19}
      {set $track_y_pos_3p -135}
      {set $track_z_pos_3p 31}
      {set $track_fade_start_3p 115}
      {set $track_fade_length_3p 50}
      {set $track_x_offset 24}
      {set $track_side_angle 7.5}
      )
      (rb4
      {set $trackangle TRUE}
      {set $track_pitch -40.15}
      {set $track_fov 21}
      {set $track_y_pos -112}
      {set $track_z_pos 26.25}
      {set $track_fade_start 130}
      {set $track_fade_length 15}
      {set $multioptimized TRUE}
      {set $track_pitch_2p -40.15}
      {set $track_fov_2p 21}
      {set $track_y_pos_2p -112}
      {set $track_z_pos_2p 26.25}
      {set $track_fade_start_2p 136}
      {set $track_fade_length_2p 15}
      {set $track_cam_offset 0.5}
      {set $track_pitch_3p -40.15}
      {set $track_fov_3p 21}
      {set $track_y_pos_3p -128}
      {set $track_z_pos_3p 30.25}
      {set $track_fade_start_3p 136}
      {set $track_fade_length_3p 15}
      {set $track_x_offset 27.75}
      {set $track_side_angle 9.5}
      )
      (rr
      {set $trackangle TRUE}
      {set $track_pitch -90}
      {set $track_fov 19}
      {set $track_y_pos -165}
      {set $track_z_pos 36}
      {set $track_fade_start 15}
      {set $track_fade_length 45}
      {set $multioptimized FALSE}
      )
      }
    )
    (update_helpbar
            {helpbar
                set_config
                ((cancel helpbar_back)
                    (confirm helpbar_select))})
    (SCROLL_MSG)
    (BUTTON_DOWN_MSG
        {if
        {== $action kAction_Cancel}
        {synth play button_toggle}
         {ui goto_screen overshell_track_screen}
         {ui pop_screen}}
         kDataUnhandled)
    (TRANSITION_COMPLETE_MSG
        {$this update_helpbar})}
{new
   BandScreen
   overshell_angle_screen
   (panels overshell_angle_panel practice_mode_panel practice_lower3rd_panel)
   (focus overshell_angle_panel)}
;