#define TRACK_END_FRAME
(1920)

(new Object fc_bass_callback ;remove FC groove on bass miss/pass
    (miss
        {{{{get_track_panel} find bass} find BassSuperStreak_OFF.trig} trigger}
        {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}
        {bass stop_deploy})
    (pass
        {{{{get_track_panel} find bass} find BassSuperStreak_OFF.trig} trigger}
        {{{{get_track_panel} find bass} find streak_meter} star_deploy_stop}
        {bass stop_deploy})
)

(new Object fc_gtr_callback ;remove FC groove on gtr miss/pass
    (miss
        {{{{get_track_panel} find guitar} find BassSuperStreak_OFF.trig} trigger}
        {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}
        {guitar stop_deploy})
    (pass
        {{{{get_track_panel} find guitar} find BassSuperStreak_OFF.trig} trigger}
        {{{{get_track_panel} find guitar} find streak_meter} star_deploy_stop}
        {guitar stop_deploy})
)

(new Object fc_drum_callback ;remove FC groove on drum miss/pass
    (miss
        {{{{get_track_panel} find drum} find BassSuperStreak_OFF.trig} trigger}
        {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}
        {drum stop_deploy})
    (pass
        {{{{get_track_panel} find drum} find BassSuperStreak_OFF.trig} trigger}
        {{{{get_track_panel} find drum} find streak_meter} star_deploy_stop}
        {drum stop_deploy})
)

#define TRACK_PANEL_HANDLERS
((enter
      {game add_sink $this}
      {unless {modifier_mgr is_modifier_active mod_legacybass}
         {beatmatch foreach_active_player $player ;handle adding the appropriate callbacks to each player
             {switch {$player instrument}
                (bass {$player add_sink fc_bass_callback (miss pass)})
                (guitar {$player add_sink fc_gtr_callback (miss pass)})
                (drum {$player add_sink fc_drum_callback (miss pass)})}}}

;{$player add_sink fc_pass_callback (pass)}}} ;pass callback test

      {$this
         set_showing
         {if_else
            {'||'
               $skip_intro
               {gamemode get is_drum_trainer}
               {gamemode get is_practice}}
            {gamemode get show_track}
            FALSE}})
   (exit
      {game remove_sink $this})
   (unison_hit)
   (unison_miss)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this set_showing FALSE}
      {$this set_track_out})
   (intro_start
      {$this reset}
      {$this
         set_showing
         {gamemode get show_track}}
      {$this set_track_in})
   (intro_skip
      {$this reset}
      {$this
         set_showing
         {gamemode get show_track}}
      {$this set_track_out}
      {$this play_intro})
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}
         {{$m track}
            init
            {$m track}}}
      {{$this loaded_dir}
         reset})
   (on_extend
      {$this play_intro}
          {if
            {modifier_mgr is_modifier_active mod_songspeed115}
			{set $speedmod 1.15}}
          {if
            {modifier_mgr is_modifier_active mod_songspeed125}
			{set $speedmod 1.25}}
          {if
            {modifier_mgr is_modifier_active mod_songspeed135}
			{set $speedmod 1.35}}
          {if
            {modifier_mgr is_modifier_active mod_songspeed150}
			{set $speedmod 1.50}}
          {if
            {modifier_mgr is_modifier_active mod_songspeed175}
			{set $speedmod 1.75}}
          {if
            {modifier_mgr is_modifier_active mod_songspeed200}
			{set $speedmod 2.0}}
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {synth play track_beg.cue}
		 {beatmatch set_music_speed $speedmod}}))
{new
   TrackPanel
   coop_track_panel
   (file ../track/trackpanel.milo)
   TRACK_PANEL_HANDLERS}
{new
   TrackPanel
   h2h_track_panel
   (file
      {if_else
         {==
            {{game get_participant_config 0}
               get_track_sym}
            vocals}
         ../track/trackpanel_h2h_vocals.milo
         ../track/trackpanel_h2h.milo})
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}